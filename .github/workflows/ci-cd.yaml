on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout del c칩digo del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Build Docker image with SHA
    - name: Build Docker image
      run: |
        docker build -t ebloemer/nginx-server:${{ github.sha }} .
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

    # 4. Push Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push ebloemer/nginx-server:${{ github.sha }}

    # 5. Ejecutar el script directamente en el servidor remoto
    - name: Deploy on remote server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "Creando y ejecutando el script en el servidor remoto..."
          mkdir -p ~/deploy-scripts
          cat << EOF > ~/deploy-scripts/deploy.sh
          #!/bin/bash

          if [ -z "\$1" ]; then
            echo "Error: Debes proporcionar el hash SHA como par치metro."
            echo "Uso: \$0 <sha>"
            exit 1
          fi

          SHA=\$1
          IMAGE_NAME="ebloemer/nginx-server"
          CONTAINER_NAME="nginx-server"

          echo "Desplegando la imagen: \$IMAGE_NAME:\$SHA"

          if [ "\$(docker ps -aq -f name=\$CONTAINER_NAME)" ]; then
            echo "Deteniendo y eliminando el contenedor anterior..."
            docker stop \$CONTAINER_NAME && docker rm \$CONTAINER_NAME
          fi

          echo "Eliminando la imagen anterior..."
          docker image rm -f \$IMAGE_NAME:\$SHA || echo "No se encontr칩 una imagen anterior con este SHA."

          echo "Haciendo pull de la nueva imagen..."
          docker pull \$IMAGE_NAME:\$SHA

          echo "Ejecutando el nuevo contenedor..."
          docker run -d --name \$CONTAINER_NAME -p 80:80 --restart always \$IMAGE_NAME:\$SHA 

          if [ "\$(docker ps -q -f name=\$CONTAINER_NAME)" ]; then
            echo "El contenedor se est치 ejecutando correctamente."
            echo "Accede a: http://<tu-servidor>:8080"
          else
            echo "Error: No se pudo iniciar el contenedor."
            exit 1
          fi
          EOF

          chmod +x ~/deploy-scripts/deploy.sh
          ~/deploy-scripts/deploy.sh ${{ github.sha }}

          chmod +x ~/deploy-scripts/deploy.sh
          ~/deploy-scripts/deploy.sh ${{ github.sha }}
